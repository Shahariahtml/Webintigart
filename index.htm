<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <title>Webbch</title>
    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            overflow: hidden;
            font-family: Arial, sans-serif;
            background: #111828; /* Set the background color to #1b222c */
        }

        iframe {
            border: none;
            width: 100%;
            height: 100%;
            display: none; /* Initially hidden */
        }

        #offline-message {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(37, 26, 102, 0.88);
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            text-align: center;
            z-index: 10;
        }
    </style>
</head>
<body>
    <!-- Offline message -->
    <div id="offline-message">
        You are offline. Please check your internet connection.
    </div>

    <!-- iframe content -->
    <iframe id="content-frame" src="https://webbch113.netlify.app"></iframe>

    <script>
        const offlineMessage = document.getElementById('offline-message');
        const contentFrame = document.getElementById('content-frame');

        // Function to check online status
        function updateOnlineStatus() {
            if (navigator.onLine) {
                offlineMessage.style.display = 'none';
                contentFrame.style.display = 'block'; // Show iframe when online
            } else {
                offlineMessage.style.display = 'flex';
                contentFrame.style.display = 'none'; // Hide iframe when offline
            }
        }

        // Event listeners for online and offline events
        window.addEventListener('online', updateOnlineStatus);
        window.addEventListener('offline', updateOnlineStatus);

        // Event listener for iframe load completion
        contentFrame.addEventListener('load', function() {
            contentFrame.style.display = 'block'; // Make iframe visible after it has loaded
        });

        // Handle iframe loading error
        contentFrame.addEventListener('error', function() {
            contentFrame.style.display = 'none'; // Hide iframe if there's an error
            offlineMessage.style.display = 'flex'; // Show offline message
        });

        // Initial check for online/offline status
        updateOnlineStatus();

        // Caching strategy - Register a Service Worker for caching the iframe content
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/service-worker.js').then(function(registration) {
                console.log('Service Worker registered with scope:', registration.scope);
            }).catch(function(error) {
                console.log('Service Worker registration failed:', error);
            });
        }
    </script>
</body>
</html>
